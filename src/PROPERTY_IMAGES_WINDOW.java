
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author apoor
 */
public class PROPERTY_IMAGES_WINDOW extends javax.swing.JFrame {
    
   

    /**
     * Creates new form PROPERTY_IMAGES_WINDOW
     */
    
     P_TYPE type = new P_TYPE();
    HashMap<String, Integer> map = type.getTtypesMap();
    String property_image_path = "";
    int propertyId= 0;
    
    public PROPERTY_IMAGES_WINDOW() {
        initComponents();
        
        bindCombo();
        
        // when the form show up populate the jtable with all properties
        fillJtableWithPropertiesData();
    }
    
    
     // function to populate jcombobox with type data
    public void bindCombo()
    {   
        for(String s : map.keySet())
        {
            jComboBox_Types.addItem(s);
        }
    }
    
    
     // function to populate the jtable with properties data
    public void fillJtableWithPropertiesData()
    {
        P_PROPERTY property = new P_PROPERTY();
        ArrayList<P_PROPERTY> propertyList = property.propertiesList();
        
  
        String[] colNames  = {"ID",  "Address"};
        
        Object[][] rows = new Object[propertyList.size()][13];
        
        for(int i=0; i < propertyList.size(); i++)
        {
            rows [i] [0] = propertyList.get(i).getId();
           
            rows [i] [1] = propertyList.get(i).getAddress();
       
           
        }
        
        DefaultTableModel model = new DefaultTableModel(rows, colNames);
        jTable_Properties.setModel(model);
        
      
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel_Images = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox_Types = new javax.swing.JComboBox<>();
        jButton_Browse_Images = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Properties = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton_Show_Images = new javax.swing.JButton();
        jButton_Add_Image = new javax.swing.JButton();
        jButton_Remove_Image = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));

        jLabel1.setFont(new java.awt.Font("Russo One", 1, 18)); // NOI18N
        jLabel1.setText("   Property Images");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(324, 324, 324)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(0, 255, 153));

        jLabel_Images.setBackground(new java.awt.Color(255, 204, 204));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Select a Type:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Select Image:");

        jComboBox_Types.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox_TypesMouseClicked(evt);
            }
        });
        jComboBox_Types.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_TypesActionPerformed(evt);
            }
        });

        jButton_Browse_Images.setText("Browse");
        jButton_Browse_Images.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Browse_Images.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Browse_ImagesActionPerformed(evt);
            }
        });

        jTable_Properties.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable_Properties.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_PropertiesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Properties);

        jList1.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        jButton_Show_Images.setBackground(new java.awt.Color(255, 0, 0));
        jButton_Show_Images.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton_Show_Images.setText("Show Property Images");
        jButton_Show_Images.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Show_Images.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Show_ImagesActionPerformed(evt);
            }
        });

        jButton_Add_Image.setBackground(new java.awt.Color(255, 0, 0));
        jButton_Add_Image.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton_Add_Image.setText("Add");
        jButton_Add_Image.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Add_Image.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Add_ImageActionPerformed(evt);
            }
        });

        jButton_Remove_Image.setBackground(new java.awt.Color(255, 0, 0));
        jButton_Remove_Image.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton_Remove_Image.setText("Remove");
        jButton_Remove_Image.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_Remove_Image.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Remove_ImageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_Types, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_Show_Images, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jButton_Remove_Image, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton_Browse_Images))
                        .addComponent(jLabel_Images, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton_Add_Image, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_Types, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Browse_Images))
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_Images, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Show_Images, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Remove_Image, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Add_Image, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    //create a function to resize the image to the jlabel
    public ImageIcon resizeImage(String path, byte[] byteImage)
    {
        ImageIcon pic;
        if(byteImage != null) pic = new ImageIcon(byteImage);
        else pic = new ImageIcon(path);
        
        
        Image img = pic.getImage().getScaledInstance(jLabel_Images.getWidth(),jLabel_Images.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon  image = new ImageIcon(img);
       
        return image;
    }
    private void jButton_Browse_ImagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Browse_ImagesActionPerformed
        
        // browse images from computer
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Select Property Image");
        fileChooser.setCurrentDirectory(new File("c:\\"));
        
        
        //file extension
        FileNameExtensionFilter fileFilter = new FileNameExtensionFilter("Images", ".jpg", ".png", ".jpeg");
        fileChooser.addChoosableFileFilter(fileFilter);
        
        int fileState = fileChooser.showSaveDialog(null);
        
        if(fileState == JFileChooser.APPROVE_OPTION)
        {
            String path = fileChooser.getSelectedFile().getAbsolutePath();
            jLabel_Images.setIcon(resizeImage(path, null));
            property_image_path = path;
        }
        
    }//GEN-LAST:event_jButton_Browse_ImagesActionPerformed

    private void jButton_Show_ImagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Show_ImagesActionPerformed
      
        try{
                int rowIndex = jTable_Properties.getSelectedRow();
                int id = Integer.valueOf(jTable_Properties.getValueAt(rowIndex, 0).toString());
                
                
                if(jList1.getModel().getSize() > 0)
                {
                     // show the selected property image in a slider
                PROPERTY_IMAGES_SLIDER imageSliderform = new PROPERTY_IMAGES_SLIDER(id);
                imageSliderform.setVisible(true);
                imageSliderform.pack();
                imageSliderform.setLocationRelativeTo(null);
                imageSliderform.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                }
                else
                {
                JOptionPane.showMessageDialog(null, "This Property Does Not Have Any Images", "No Images Found", 2);  
    
                }
                
                
        }
       
        catch(Exception ex)
        {
         
            JOptionPane.showMessageDialog(null, "Select The Property First", "Property Not Selected", 2);  

        }
       
    }//GEN-LAST:event_jButton_Show_ImagesActionPerformed

    private void jButton_Add_ImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Add_ImageActionPerformed
        // add images to property(multiple too)
        P_PROPERTY property = new P_PROPERTY();
       
        if(propertyId != 0)
        {
             if(property.addImage(propertyId, property_image_path))
        {
            JOptionPane.showMessageDialog(null, "Image added To This Property", "Add Image", 1);
        }
        else{
             JOptionPane.showMessageDialog(null, "Image not added To This Property", "Add Image", 2);
        }
        }
        else{
                   JOptionPane.showMessageDialog(null, "Select The Property First", "Property Not Selected", 2);  
            }
        
    }//GEN-LAST:event_jButton_Add_ImageActionPerformed

    private void jButton_Remove_ImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Remove_ImageActionPerformed
        
        
        
        try
        {
            // remove the selected image 
            String selectedListItem = String.valueOf(jList1.getSelectedValue () );
        Integer imageId = Integer.valueOf(selectedListItem);
        
        int yes_or_no = JOptionPane.showConfirmDialog(null, "Do You Want To Delete This Image?","Delete Image", JOptionPane.YES_NO_OPTION);
        
         if(yes_or_no == JOptionPane.YES_OPTION)
            {
                 if(new P_PROPERTY().removePropertyImage(imageId))
                 {
                     JOptionPane.showMessageDialog(null, "Property Image Deleted", "Delete Image", 1);
                     jLabel_Images.setIcon(null);
                     
                     // Clear the JList
            DefaultListModel<String> listModel = new DefaultListModel<>();
            jList1.setModel(listModel);
                 }
            }else{
                  JOptionPane.showMessageDialog(null, "Operation Failed, Image Not Deleted", "Delete Image", 2);
             }
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "No Image Selected", "Delete Image", 2);
        }
            
    }//GEN-LAST:event_jButton_Remove_ImageActionPerformed

    private void jComboBox_TypesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_TypesActionPerformed
        // show properties in the jtable depending upon the type
        
        int typeId = map.get(jComboBox_Types.getSelectedItem().toString());
         P_PROPERTY property = new P_PROPERTY();
        ArrayList<P_PROPERTY> propertyList = property.propertiesListByType(typeId);
        
  
        String[] colNames  = {"ID",  "Address"};
        
        Object[][] rows = new Object[propertyList.size()][13];
        
        for(int i=0; i < propertyList.size(); i++)
        {
            rows [i] [0] = propertyList.get(i).getId();
           
            rows [i] [1] = propertyList.get(i).getAddress();
       
           
        }
        
        DefaultTableModel model = new DefaultTableModel(rows, colNames);
        jTable_Properties.setModel(model);
    }//GEN-LAST:event_jComboBox_TypesActionPerformed

    private void jComboBox_TypesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox_TypesMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_TypesMouseClicked

    private void jTable_PropertiesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_PropertiesMouseClicked
        int rowIndex = jTable_Properties.getSelectedRow();
        propertyId = Integer.valueOf(jTable_Properties.getValueAt(rowIndex,0).toString());
        
        //display the selected images list
        
        fillTypeList();
        
    }//GEN-LAST:event_jTable_PropertiesMouseClicked

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // display the selected image from jlist to jlabel
        try{
        String selectedListItem = String.valueOf(jList1.getSelectedValue () );
        Integer imageId = Integer.valueOf(selectedListItem);
        byte[] image = new P_PROPERTY().getImageById (imageId);
        jLabel_Images.setIcon(resizeImage ("", image) );
        }
        catch(Exception ex)
        {
            //nothing
        }
    }//GEN-LAST:event_jList1MouseClicked

    
    
    // function to populate the Jlist with the selected property images id
    public void fillTypeList()
    {
    HashMap<byte[], Integer> imagesListMap = new  P_PROPERTY().propertyImagesList(propertyId);
        
        DefaultListModel ListModel = new DefaultListModel();
        
        int i = 0;
        
        for(Integer id: imagesListMap.values())
        {
            ListModel.add(i, id);
            
            i++;
        }
        jList1.setModel(ListModel);
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PROPERTY_IMAGES_WINDOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PROPERTY_IMAGES_WINDOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PROPERTY_IMAGES_WINDOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PROPERTY_IMAGES_WINDOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PROPERTY_IMAGES_WINDOW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Add_Image;
    private javax.swing.JButton jButton_Browse_Images;
    private javax.swing.JButton jButton_Remove_Image;
    private javax.swing.JButton jButton_Show_Images;
    private javax.swing.JComboBox<String> jComboBox_Types;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel_Images;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_Properties;
    // End of variables declaration//GEN-END:variables
}
